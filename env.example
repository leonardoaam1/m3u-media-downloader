# ================================
# MediaDown - Configuração Segura
# ================================
# IMPORTANTE: Copie este arquivo para .env e altere todos os valores!
# NUNCA commite o arquivo .env para o repositório!

# ================================
# CONFIGURAÇÕES CRÍTICAS (OBRIGATÓRIO ALTERAR!)
# ================================

# Database Configuration
# Produção: Use PostgreSQL com senha forte
DATABASE_URL=postgresql://media_user:ALTERE_ESTA_SENHA@localhost/mediadownloader
# Desenvolvimento: Pode usar SQLite
# DATABASE_URL=sqlite:///mediadown_dev.db

# Redis Configuration
REDIS_URL=redis://localhost:6379/0

# Security Keys (GERE CHAVES SEGURAS!)
# Use: python -c "import secrets; print(secrets.token_urlsafe(64))"
SECRET_KEY=GERE_UMA_CHAVE_SECRETA_AQUI_COM_64_CARACTERES_MINIMO
JWT_SECRET_KEY=GERE_OUTRA_CHAVE_SECRETA_AQUI_COM_64_CARACTERES_MINIMO
API_KEY=GERE_UMA_CHAVE_API_AQUI_COM_32_CARACTERES
WEBHOOK_SECRET=GERE_UM_SECRET_WEBHOOK_AQUI_COM_32_CARACTERES

# ================================
# CONFIGURAÇÕES DE APLICAÇÃO
# ================================

# Environment (development/production/testing)
FLASK_ENV=production
FLASK_DEBUG=False
HOST=0.0.0.0
PORT=5000

# Session Security
SESSION_COOKIE_SECURE=True
DEFAULT_SESSION_TIMEOUT=3600

# ================================
# CONFIGURAÇÕES DE DOWNLOAD
# ================================

# Qualidades aceitas (separadas por vírgula)
ACCEPTED_QUALITIES=480p,720p,1080p

# Diretórios de armazenamento
TEMP_DOWNLOAD_DIR=/app/temp_downloads
UPLOAD_DIR=/app/uploads
LOG_DIR=/app/logs

# Limites de performance
MAX_CONCURRENT_DOWNLOADS=3
MAX_CONCURRENT_TRANSFERS=3
BANDWIDTH_LIMIT=100MB/s
MAX_FILE_SIZE=104857600

# Extensões permitidas para upload
ALLOWED_EXTENSIONS=m3u,m3u8

# ================================
# SERVIÇOS EXTERNOS
# ================================

# TMDB Configuration (para metadados de filmes/séries)
# Obtenha sua chave em: https://www.themoviedb.org/settings/api
TMDB_API_KEY=SUA_CHAVE_TMDB_AQUI
TMDB_LANGUAGE=pt-BR

# Email Settings (para recuperação de senha - OPCIONAL)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=seu_email@gmail.com
SMTP_PASSWORD=sua_senha_app_gmail
SMTP_USE_TLS=True

# ================================
# CONFIGURAÇÕES AVANÇADAS
# ================================

# Logging
LOG_LEVEL=INFO
LOG_MAX_SIZE=10485760
LOG_BACKUP_COUNT=5

# Rate Limiting
RATE_LIMIT_ENABLED=True
RATE_LIMIT_PER_MINUTE=60

# Backup S3 (OPCIONAL)
S3_BUCKET_NAME=nome-do-seu-bucket
S3_ACCESS_KEY_ID=sua_access_key
S3_SECRET_ACCESS_KEY=sua_secret_key
S3_REGION=us-east-1
BACKUP_ENABLED=False
BACKUP_RETENTION_DAYS=30

# Monitoring (OPCIONAL)
PROMETHEUS_ENABLED=False
PROMETHEUS_PORT=9090
HEALTH_CHECK_INTERVAL=30

# ================================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# ================================
# Apenas para FLASK_ENV=development

# Auto-reload e debug
DEV_AUTO_RELOAD=True
DEV_SQL_ECHO=False
DEV_PROFILER_ENABLED=False
DEV_USE_SQLITE=False

# ================================
# CONFIGURAÇÕES DE TESTE
# ================================
# Apenas para FLASK_ENV=testing

TEST_DATABASE_URL=sqlite:///:memory:
TEST_SKIP_AUTH=False

# ================================
# INSTRUÇÕES DE SEGURANÇA
# ================================

# 1. GERAR CHAVES SEGURAS:
#    python -c "import secrets; print('SECRET_KEY=' + secrets.token_urlsafe(64))"
#    python -c "import secrets; print('JWT_SECRET_KEY=' + secrets.token_urlsafe(64))"
#    python -c "import secrets; print('API_KEY=' + secrets.token_urlsafe(32))"

# 2. CONFIGURAR BANCO:
#    - Criar usuário específico para a aplicação
#    - Usar senha forte (mínimo 16 caracteres)
#    - Configurar SSL se necessário

# 3. CONFIGURAR REDIS:
#    - Usar AUTH se em produção
#    - Configurar bind e protected-mode

# 4. CONFIGURAR HTTPS:
#    - SSL obrigatório em produção
#    - Certificado válido (Let's Encrypt recomendado)

# 5. PERMISSÕES DE ARQUIVO:
#    chmod 600 .env
#    chown app_user:app_group .env

# 6. FIREWALL:
#    - Apenas portas necessárias abertas
#    - Rate limiting no nginx/proxy